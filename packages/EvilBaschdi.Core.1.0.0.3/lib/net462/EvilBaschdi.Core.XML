<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EvilBaschdi.Core</name>
    </assembly>
    <members>
        <member name="T:EvilBaschdi.Core.Application.Info">
            <summary>
                Extension class to display change dates of current application.
            </summary>
        </member>
        <member name="M:EvilBaschdi.Core.Application.Info.GetLinkerTime(System.Reflection.Assembly)">
            <summary>
                Gets LinkerTime from assembly.
            </summary>
            <param name="assembly"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="assembly" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:EvilBaschdi.Core.Application.Info.GetLinkerTime(System.Reflection.Assembly,System.TimeZoneInfo)">
            <summary>
                Gets LinkerTime from assembly.
            </summary>
            <param name="assembly"></param>
            <param name="target"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="assembly" /> is <see langword="null" />.</exception>
        </member>
        <member name="T:EvilBaschdi.Core.Application.ISettings">
            <summary>
                Wrapper arround Default Settings.
            </summary>
        </member>
        <member name="P:EvilBaschdi.Core.Application.ISettings.Accent">
            <summary>
                MahApps ThemeManager Accent.
            </summary>
        </member>
        <member name="P:EvilBaschdi.Core.Application.ISettings.Theme">
            <summary>
                MahApps ThemeManager Theme.
            </summary>
        </member>
        <member name="T:EvilBaschdi.Core.Browsers.ExplorerFolderBrowser">
            <summary>
                Stellt einen Auswahldialog für Ordner und Systemelemente ab Windows Vista bereit.
            </summary>
        </member>
        <member name="P:EvilBaschdi.Core.Browsers.ExplorerFolderBrowser.SelectedPath">
            <summary>
                Ruft den ausgewählten Ordnerpfad ab bzw. legt diesen fest.
            </summary>
        </member>
        <member name="P:EvilBaschdi.Core.Browsers.ExplorerFolderBrowser.SelectedElementName">
            <summary>
                Ruft den Anzeigenamen eines einzelnen, ausgewählten Elements ab.
            </summary>
        </member>
        <member name="P:EvilBaschdi.Core.Browsers.ExplorerFolderBrowser.SelectedPaths">
            <summary>
                Ruft ein Array mit Ordnerpfaden der ausgewählten Ordner ab.
            </summary>
        </member>
        <member name="P:EvilBaschdi.Core.Browsers.ExplorerFolderBrowser.SelectedElementNames">
            <summary>
                Ruft ein Array mit den Namen der ausgewählten Elemente ab.
            </summary>
        </member>
        <member name="P:EvilBaschdi.Core.Browsers.ExplorerFolderBrowser.AllowNonStoragePlaces">
            <summary>
                Ruft einen Wert ab der angibt ob auch Elemente ausgewählt werden können, die keine Ordner sind oder legt diesen
                fest.
            </summary>
        </member>
        <member name="P:EvilBaschdi.Core.Browsers.ExplorerFolderBrowser.Multiselect">
            <summary>
                Ruft einen Wert ab der angibt ob mehrere Elemente ausgewählt werden können oder legt diesen fest.
            </summary>
        </member>
        <member name="M:EvilBaschdi.Core.Browsers.ExplorerFolderBrowser.ShowDialog">
            <summary>
                Zeigt den Auswahldialog an.
            </summary>
            <returns><c>true</c> wenn der Benutzer die Ordnerauswahl bestätigte; andernfalls <c>false</c></returns>
        </member>
        <member name="M:EvilBaschdi.Core.Browsers.ExplorerFolderBrowser.ShowDialog(System.Windows.Window)">
            <summary>
                Zeigt den Auswahldialog an.
            </summary>
            <param name="owner">Der Besitzer des Fensters</param>
            <returns><c>true</c> wenn der Benutzer die Ordnerauswahl bestätigte; andernfalls <c>false</c></returns>
        </member>
        <member name="M:EvilBaschdi.Core.Browsers.ExplorerFolderBrowser.ShowDialog(System.Windows.Interop.IWin32Window)">
            <summary>
                Zeigt den Auswahldialog an.
            </summary>
            <param name="owner">Der Besitzer des Fensters</param>
            <returns><c>true</c> wenn der Benutzer die Ordnerauswahl bestätigte; andernfalls <c>false</c></returns>
        </member>
        <member name="M:EvilBaschdi.Core.Browsers.ExplorerFolderBrowser.ShowDialog(System.IntPtr)">
            <summary>
                Zeigt den Auswahldialog an.
            </summary>
            <param name="owner">Der Besitzer des Fensters</param>
            <returns><c>true</c> wenn der Benutzer die Ordnerauswahl bestätigte; andernfalls <c>false</c></returns>
        </member>
        <member name="T:EvilBaschdi.Core.Browsers.FolderBrowser">
            <summary>
                Class for FolderBrowser.
            </summary>
        </member>
        <member name="M:EvilBaschdi.Core.Browsers.FolderBrowser.ShowDialog">
            <summary>
                Shows FolderBrowser.
            </summary>
        </member>
        <member name="P:EvilBaschdi.Core.Browsers.FolderBrowser.SelectedPath">
            <summary>
                Get or Set selected path.
            </summary>
        </member>
        <member name="T:EvilBaschdi.Core.Browsers.IFolderBrowser">
            <summary>
                Interface for FolderBrowser.
            </summary>
        </member>
        <member name="M:EvilBaschdi.Core.Browsers.IFolderBrowser.ShowDialog">
            <summary>
                Shows FolderBrowser.
            </summary>
        </member>
        <member name="P:EvilBaschdi.Core.Browsers.IFolderBrowser.SelectedPath">
            <summary>
                Get or Set selected path.
            </summary>
        </member>
        <member name="T:EvilBaschdi.Core.Browsers.INetworkBrowser">
            <summary>
                Interface for NetworkBrowser.
            </summary>
        </member>
        <member name="P:EvilBaschdi.Core.Browsers.INetworkBrowser.GetNetworkComputers">
            <summary>
                Contains an ArrayList of computers found in the network.
            </summary>
        </member>
        <member name="T:EvilBaschdi.Core.Browsers.NetworkBrowser">
            <summary>
                Class for NetworkBrowser.
            </summary>
        </member>
        <member name="M:EvilBaschdi.Core.Browsers.NetworkBrowser.NetServerEnum(System.String,System.Int32,System.IntPtr@,System.Int32,System.Int32@,System.Int32@,System.Int32,System.String,System.Int32@)">
            <summary>
                NetServerEnum.
            </summary>
            <param name="serverName"></param>
            <param name="dwLevel"></param>
            <param name="pBuf"></param>
            <param name="dwPrefMaxLen"></param>
            <param name="dwEntriesRead"></param>
            <param name="dwTotalEntries"></param>
            <param name="dwServerType"></param>
            <param name="domain"></param>
            <param name="dwResumeHandle"></param>
            <returns></returns>
        </member>
        <member name="M:EvilBaschdi.Core.Browsers.NetworkBrowser.NetApiBufferFree(System.IntPtr)">
            <summary>
                NetApiBufferFree.
            </summary>
            <param name="pBuf"></param>
            <returns></returns>
        </member>
        <member name="P:EvilBaschdi.Core.Browsers.NetworkBrowser.GetNetworkComputers">
            <summary>
                Contains an ArrayList of computers found in the network.
            </summary>
        </member>
        <member name="T:EvilBaschdi.Core.Browsers.NetworkBrowser.ServerInfo">
            <summary>
                ServerInfo.
            </summary>
        </member>
        <member name="T:EvilBaschdi.Core.DirectoryExtensions.FilePath">
            <summary>
            </summary>
        </member>
        <member name="M:EvilBaschdi.Core.DirectoryExtensions.FilePath.#ctor(EvilBaschdi.Core.Threading.IMultiThreadingHelper)">
            <summary>
                Initialisiert eine neue Instanz der <see cref="T:System.Object" />-Klasse.
            </summary>
            <exception cref="T:System.ArgumentNullException"><paramref name="multiThreadingHelper" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:EvilBaschdi.Core.DirectoryExtensions.FilePath.GetSubdirectoriesContainingOnlyFiles(System.String)">
            <summary>
                Gets a list of accessible directories that contain files.
            </summary>
            <param name="path"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="path" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:EvilBaschdi.Core.DirectoryExtensions.FilePath.GetFileList(System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
                Returns a list of filepaths for given initial directory.
            </summary>
            <param name="initialDirectory">Directory to start search.</param>
            <param name="includeExtensionList">File extensions to include. No filtering if empty.</param>
            <param name="excludeExtensionList">File extensions to exclude. Not filtering if empty.</param>
            <param name="includeFileNameList">File name to include. No filtering if empty.</param>
            <param name="excludeFileNameList">File name to exclude. No filtering if empty.</param>
            <param name="includeFilePathList">File path to include. No filtering if empty.</param>
            <param name="excludeFilePathList">File path to exclude. No filtering if empty.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="initialDirectory" /> is <see langword="null" />.</exception>
        </member>
        <member name="T:EvilBaschdi.Core.DirectoryExtensions.Ftp">
            <summary>
                Class for Ftp.
            </summary>
        </member>
        <member name="M:EvilBaschdi.Core.DirectoryExtensions.Ftp.#ctor(System.String,System.String,System.String)">
            <exception cref="T:System.ArgumentNullException">
                <paramref name="host" /> is <see langword="null" />.
                <paramref name="user" /> is <see langword="null" />.
                <paramref name="password" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:EvilBaschdi.Core.DirectoryExtensions.Ftp.DirectoryListSimple(System.String)">
            <summary>
                Returns a list of directories by given directory.
            </summary>
            <param name="directory"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="directory" /> is <see langword="null" />.</exception>
            <exception cref="T:System.InvalidOperationException">Condition.</exception>
        </member>
        <member name="T:EvilBaschdi.Core.DirectoryExtensions.IFilePath">
            <summary>
            </summary>
        </member>
        <member name="M:EvilBaschdi.Core.DirectoryExtensions.IFilePath.GetFileList(System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            </summary>
            <param name="initialDirectory">Directory to start search.</param>
            <param name="includeExtensionList">File extensions to include. No filtering if empty.</param>
            <param name="excludeExtensionList">File extensions to exclude. Not filtering if empty.</param>
            <param name="includeFileNameList">File name to include. No filtering if empty.</param>
            <param name="excludeFileNameList">File name to exclude. No filtering if empty.</param>
            <param name="includeFilePathList">File path to include. No filtering if empty.</param>
            <param name="excludeFilePathList">File path to exclude. No filtering if empty.</param>
            <returns></returns>
        </member>
        <member name="M:EvilBaschdi.Core.DirectoryExtensions.IFilePath.GetSubdirectoriesContainingOnlyFiles(System.String)">
            <summary>
                Gets a list of accessible directories that contain files.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="T:EvilBaschdi.Core.DirectoryExtensions.Helpers">
            <summary>
            </summary>
        </member>
        <member name="M:EvilBaschdi.Core.DirectoryExtensions.Helpers.IsAccessible(System.String)">
            <summary>
            </summary>
        </member>
        <member name="M:EvilBaschdi.Core.DirectoryExtensions.Helpers.IsFileLocked(System.String)">
            <summary>
                Returns true, if a file is locked.
            </summary>
            <param name="file">Path of tile to check.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="file" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:EvilBaschdi.Core.DirectoryExtensions.Helpers.IsFileLocked(System.IO.FileInfo)">
            <summary>
                Returns true, if a file is locked.
            </summary>
            <param name="file">FileInfo of tile to check.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="file" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:EvilBaschdi.Core.DirectoryExtensions.Helpers.GetDirectorySize(System.String)">
            <summary>
                Extension to get size of a directory.
            </summary>
            <exception cref="T:System.ArgumentNullException"><paramref name="dirPath" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:EvilBaschdi.Core.DirectoryExtensions.Helpers.GetDirectorySize(System.IO.DirectoryInfo)">
            <summary>
                Extension to get size of a directory.
            </summary>
            <exception cref="T:System.ArgumentNullException"><paramref name="dir" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:EvilBaschdi.Core.DirectoryExtensions.Helpers.RenameTo(System.String,System.String)">
            <summary>
                Extension to rename a directory.
            </summary>
            <param name="dirPath"></param>
            <param name="name"></param>
            <exception cref="T:System.ArgumentException">New name cannot be null or blank</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="dirPath" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:EvilBaschdi.Core.DirectoryExtensions.Helpers.RenameTo(System.IO.DirectoryInfo,System.String)">
            <summary>
                Extension to rename a directory.
            </summary>
            <param name="dir"></param>
            <param name="name"></param>
            <exception cref="T:System.ArgumentNullException"><paramref name="dir" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">New name cannot be null or blank</exception>
        </member>
        <member name="T:EvilBaschdi.Core.DirectoryExtensions.IFtp">
            <summary>
                Interface for Ftp.
            </summary>
        </member>
        <member name="M:EvilBaschdi.Core.DirectoryExtensions.IFtp.DirecotryListSimple(System.String)">
            <summary>
                Returns a list of directories by given directory.
            </summary>
            <param name="directory"></param>
            <returns></returns>
        </member>
        <member name="T:EvilBaschdi.Core.DotNetExtensions.CalculateTimeSpan">
            <summary>
                Summary description for CalculateTimeSpan
            </summary>
        </member>
        <member name="M:EvilBaschdi.Core.DotNetExtensions.CalculateTimeSpan.Month(System.TimeSpan)">
            <summary>
                Get TimeSpan in months.
            </summary>
            <param name="span"></param>
            <returns></returns>
        </member>
        <member name="M:EvilBaschdi.Core.DotNetExtensions.CalculateTimeSpan.Year(System.TimeSpan)">
            <summary>
                Get TimeSpan in years.
            </summary>
            <param name="span"></param>
            <returns></returns>
        </member>
        <member name="M:EvilBaschdi.Core.DotNetExtensions.CalculateTimeSpan.Quarter(System.DateTime)">
            <summary>
                Get TimeSpan in quarters.
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="T:EvilBaschdi.Core.DotNetExtensions.ColorHelpers">
            <summary>
                HelperClass to extend Color functionality.
            </summary>
        </member>
        <member name="M:EvilBaschdi.Core.DotNetExtensions.ColorHelpers.Subtract(System.Byte,System.Int32)">
            <summary>
                Substracts integers from byte.
            </summary>
            <param name="value"></param>
            <param name="integer"></param>
            <returns></returns>
        </member>
        <member name="M:EvilBaschdi.Core.DotNetExtensions.ColorHelpers.Add(System.Byte,System.Int32)">
            <summary>
                Adds integer to byte.
            </summary>
            <param name="value"></param>
            <param name="integer"></param>
            <returns></returns>
        </member>
        <member name="M:EvilBaschdi.Core.DotNetExtensions.ColorHelpers.ToColor(System.String)">
            <summary>
                Converts hex to Color.
            </summary>
            <param name="hex"></param>
            <returns></returns>
        </member>
        <member name="T:EvilBaschdi.Core.DotNetExtensions.IValue`1">
            <summary>
                Generic Interface construct to encapsulate Classes without Interfaces
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:EvilBaschdi.Core.DotNetExtensions.IValue`1.Value">
            <summary>Value</summary>
        </member>
        <member name="T:EvilBaschdi.Core.DotNetExtensions.VersionHelper">
            <summary>
                Get if Windows Version is vista or higher.
            </summary>
        </member>
        <member name="P:EvilBaschdi.Core.DotNetExtensions.VersionHelper.IsVista">
            <summary>
                OS is at least Windows Vista.
            </summary>
        </member>
        <member name="P:EvilBaschdi.Core.DotNetExtensions.VersionHelper.IsWindows7">
            <summary>
                OS is Windows 7 or higher.
            </summary>
        </member>
        <member name="M:EvilBaschdi.Core.DotNetExtensions.VersionHelper.IsWindows10">
            <summary>
                OS is Windows 10.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EvilBaschdi.Core.DotNetExtensions.VersionHelper.GetWindowsClientVersion">
            <summary>
                Gets the real OS Version.
                Application has to contain a app.manifest supporting windows 10.
            </summary>
            <returns></returns>
        </member>
        <member name="T:EvilBaschdi.Core.Logging.AppendAllTextWithHeadline">
            <summary>
                Does a File.AppendAllText by adding a headline to the file.
            </summary>
        </member>
        <member name="M:EvilBaschdi.Core.Logging.AppendAllTextWithHeadline.For(System.String,System.String,System.String)">
            <summary>
            </summary>
            <param name="path"></param>
            <param name="contents"></param>
            <param name="headline"></param>
        </member>
        <member name="M:EvilBaschdi.Core.Logging.AppendAllTextWithHeadline.For(System.String,System.Text.StringBuilder,System.String)">
            <summary>
            </summary>
            <param name="path"></param>
            <param name="stringBuilder"></param>
            <param name="headline"></param>
        </member>
        <member name="T:EvilBaschdi.Core.Logging.IAppendAllTextWithHeadline">
            <summary>
                Does a File.AppendAllText by adding a headline to the file.
            </summary>
        </member>
        <member name="M:EvilBaschdi.Core.Logging.IAppendAllTextWithHeadline.For(System.String,System.String,System.String)">
            <summary>
            </summary>
            <param name="path"></param>
            <param name="contents"></param>
            <param name="headline"></param>
        </member>
        <member name="M:EvilBaschdi.Core.Logging.IAppendAllTextWithHeadline.For(System.String,System.Text.StringBuilder,System.String)">
            <summary>
            </summary>
            <param name="path"></param>
            <param name="stringBuilder"></param>
            <param name="headline"></param>
        </member>
        <member name="T:EvilBaschdi.Core.Security.Encryption">
            <summary>
                encrypt and decrypt strings
            </summary>
        </member>
        <member name="M:EvilBaschdi.Core.Security.Encryption.EncryptString(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
                Encrypts the string.
            </summary>
            <param name="clearText">The clear text.</param>
            <param name="key">The key.</param>
            <param name="iv">The IV.</param>
            <returns></returns>
        </member>
        <member name="M:EvilBaschdi.Core.Security.Encryption.EncryptString(System.String,System.String)">
            <summary>
                Encrypts the string.
            </summary>
            <param name="clearText">The clear text.</param>
            <param name="encryptionKey">The password.</param>
            <returns></returns>
        </member>
        <member name="M:EvilBaschdi.Core.Security.Encryption.DecryptString(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
                Decrypts the string.
            </summary>
            <param name="cipherData">The cipher data.</param>
            <param name="key">The key.</param>
            <param name="iv">The IV.</param>
            <returns></returns>
        </member>
        <member name="M:EvilBaschdi.Core.Security.Encryption.DecryptString(System.String,System.String)">
            <summary>
                Decrypts the string.
            </summary>
            <param name="cipherText">The cipher text.</param>
            <param name="encryptionKey">The password.</param>
            <returns></returns>
        </member>
        <member name="T:EvilBaschdi.Core.Threading.IMultiThreadingHelper">
            <summary>
                Interface to provide multi threading execution.
            </summary>
        </member>
        <member name="M:EvilBaschdi.Core.Threading.IMultiThreadingHelper.CallInParallelByProcessorCount(System.Collections.IList,System.Action{System.Tuple{System.Int32,System.Int32}})">
            <summary>
                Calls actions by processor count.
            </summary>
            <param name="list"></param>
            <param name="worker"></param>
        </member>
        <member name="T:EvilBaschdi.Core.Threading.MultiThreadingHelper">
            <summary>
                Class to provide multi threading execution.
            </summary>
        </member>
        <member name="M:EvilBaschdi.Core.Threading.MultiThreadingHelper.CallInParallelByProcessorCount(System.Collections.IList,System.Action{System.Tuple{System.Int32,System.Int32}})">
            <summary>
                Calls actions by processor count.
            </summary>
            <param name="list"></param>
            <param name="worker"></param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="list" /> is <see langword="null" />.
                <paramref name="worker" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="T:EvilBaschdi.Core.Wpf.IThemeManagerHelper">
            <summary>
                Interface for ThemeManagerHelper class.
            </summary>
        </member>
        <member name="M:EvilBaschdi.Core.Wpf.IThemeManagerHelper.CreateAppStyleBy(System.Windows.Media.Color,System.String)">
            <summary>
                Creates a new app style by color and name.
            </summary>
            <param name="color">Color to create app style for.</param>
            <param name="accentName">Name of the new app style.</param>
        </member>
        <member name="M:EvilBaschdi.Core.Wpf.IThemeManagerHelper.RegisterSysteColorTheme">
            <summary>
                Gets Color of current (applied) system settings, generates an app style and adds it to available accents.
            </summary>
        </member>
        <member name="T:EvilBaschdi.Core.Wpf.IToast">
            <summary>
                Interface for toast message support.
            </summary>
        </member>
        <member name="M:EvilBaschdi.Core.Wpf.IToast.Show(System.String,System.String)">
            <summary>
                Show Message.
            </summary>
            <param name="status"></param>
            <param name="message"></param>
        </member>
        <member name="T:EvilBaschdi.Core.Wpf.Margins">
            <summary>
                Margins
            </summary>
        </member>
        <member name="T:EvilBaschdi.Core.Wpf.MetroStyle">
            <summary>
                Class that handle metro style on wpf.
            </summary>
        </member>
        <member name="F:EvilBaschdi.Core.Wpf.MetroStyle._styleAccent">
            <summary>
                Accent of Application MetroStyle.
            </summary>
        </member>
        <member name="F:EvilBaschdi.Core.Wpf.MetroStyle._styleTheme">
            <summary>
                Theme of Application MetroStyle.
            </summary>
        </member>
        <member name="M:EvilBaschdi.Core.Wpf.MetroStyle.#ctor(MahApps.Metro.Controls.MetroWindow,System.Windows.Controls.ComboBox,System.Windows.Controls.RadioButton,System.Windows.Controls.RadioButton,EvilBaschdi.Core.Application.ISettings)">
            <summary>
                Handle metro style by radio buttons.
            </summary>
            <param name="mainWindow" />
            <param name="accent" />
            <param name="themeLight" />
            <param name="settings" />
            <param name="themeDark" />
            <exception cref="T:System.ArgumentNullException">
                <paramref name="mainWindow" /> is <see langword="null" />.
                <paramref name="accent" /> is <see langword="null" />.
                <paramref name="themeDark" /> is <see langword="null" />.
                <paramref name="themeLight" /> is <see langword="null" />.
                <paramref name="settings" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:EvilBaschdi.Core.Wpf.MetroStyle.#ctor(MahApps.Metro.Controls.MetroWindow,System.Windows.Controls.ComboBox,MahApps.Metro.Controls.ToggleSwitch,EvilBaschdi.Core.Application.ISettings)">
            <summary>
                Handle metro style by ToggleSwitch.
            </summary>
            ///
            <param name="mainWindow" />
            <param name="accent" />
            <param name="themeSwitch" />
            <param name="settings" />
            <exception cref="T:System.ArgumentNullException">
                <paramref name="mainWindow" /> is <see langword="null" />.
                <paramref name="accent" /> is <see langword="null" />.
                <paramref name="themeSwitch" /> is <see langword="null" />.
                <paramref name="settings" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:EvilBaschdi.Core.Wpf.MetroStyle.Load(System.Boolean,System.Boolean)">
            <summary>
                Load.
            </summary>
            <param name="center"></param>
            <param name="resizeWithBorder400"></param>
        </member>
        <member name="M:EvilBaschdi.Core.Wpf.MetroStyle.SetStyle">
            <summary>
                Sets Style.
            </summary>
        </member>
        <member name="M:EvilBaschdi.Core.Wpf.MetroStyle.SetAccent(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
                Accent of application style.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:EvilBaschdi.Core.Wpf.MetroStyle.SetTheme(System.Object)">
            <summary>
                Theme of application style.
            </summary>
            <param name="sender"></param>
        </member>
        <member name="M:EvilBaschdi.Core.Wpf.MetroStyle.SetTheme(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
                Theme of application style.
            </summary>
            <param name="sender"></param>
            <param name="routedEventArgs"></param>
        </member>
        <member name="M:EvilBaschdi.Core.Wpf.MetroStyle.SaveStyle">
            <summary>
                Save Style.
            </summary>
        </member>
        <member name="T:EvilBaschdi.Core.Wpf.GlassEffectHelper">
            <summary>
                this.Loaded += (s, e) => GlassEffectHelper.EnableGlassEffect(this);
            </summary>
        </member>
        <member name="M:EvilBaschdi.Core.Wpf.GlassEffectHelper.EnableGlassEffect(System.Windows.Window)">
            <summary>
                Enables glass effect.
            </summary>
            <param name="window"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="window" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:EvilBaschdi.Core.Wpf.GlassEffectHelper.EnableGlassEffect(System.Windows.Window,System.Boolean)">
            <summary>
                Enables glass effect.
            </summary>
            <exception cref="T:System.ArgumentNullException"><paramref name="window" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:EvilBaschdi.Core.Wpf.GlassEffectHelper.EnableGlassEffect(System.Windows.Window,System.Boolean,System.Windows.Thickness)">
            <summary>
                Enables glass effect.
            </summary>
            <exception cref="T:System.ArgumentNullException"><paramref name="window" /> is <see langword="null" />.</exception>
        </member>
        <member name="T:EvilBaschdi.Core.Wpf.IMetroStyle">
            <summary>
                Interface for classes that handle metro style on wpf.
            </summary>
        </member>
        <member name="M:EvilBaschdi.Core.Wpf.IMetroStyle.Load(System.Boolean,System.Boolean)">
            <summary>
                Load.
            </summary>
            <param name="center"></param>
            <param name="resizeWithBorder400"></param>
        </member>
        <member name="M:EvilBaschdi.Core.Wpf.IMetroStyle.SetAccent(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
                Accent of application style.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:EvilBaschdi.Core.Wpf.IMetroStyle.SetTheme(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
                Theme of application style.
            </summary>
            <param name="sender"></param>
            <param name="routedEventArgs"></param>
        </member>
        <member name="M:EvilBaschdi.Core.Wpf.IMetroStyle.SetTheme(System.Object)">
            <summary>
                Theme of application style.
            </summary>
            <param name="sender"></param>
        </member>
        <member name="M:EvilBaschdi.Core.Wpf.IMetroStyle.SaveStyle">
            <summary>
                Save Style.
            </summary>
        </member>
        <member name="T:EvilBaschdi.Core.Wpf.ThemeManagerHelper">
            <summary>
                ThemeManagerHelper class.
            </summary>
        </member>
        <member name="M:EvilBaschdi.Core.Wpf.ThemeManagerHelper.CreateAppStyleBy(System.Windows.Media.Color,System.String)">
            <summary>
                Creates a new app style by color and name.
            </summary>
            <param name="color">Color to create app style for.</param>
            <param name="accentName">Name of the new app style.</param>
        </member>
        <member name="M:EvilBaschdi.Core.Wpf.ThemeManagerHelper.RegisterSystemColorTheme">
            <summary>
                Gets Color of current (applied) system settings, generates an app style and adds it to available accents.
            </summary>
        </member>
        <member name="T:EvilBaschdi.Core.Wpf.Toast">
            <summary>
                Class for toast message support.
            </summary>
        </member>
        <member name="M:EvilBaschdi.Core.Wpf.Toast.#ctor(System.String)">
            <summary>
                Initialisiert eine neue Instanz der <see cref="T:System.Object" />-Klasse.
            </summary>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="imagePath" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:EvilBaschdi.Core.Wpf.Toast.#ctor(System.String,System.String)">
            <summary>
                Initialisiert eine neue Instanz der <see cref="T:System.Object" />-Klasse.
            </summary>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="imagePath" /> is <see langword="null" />.
                <paramref name="applicationId" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:EvilBaschdi.Core.Wpf.Toast.Show(System.String,System.String)">
            <summary>
                Show Message.
            </summary>
            <param name="status"></param>
            <param name="message"></param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="status" /> is <see langword="null" />.
                <paramref name="message" /> is <see langword="null" />.
            </exception>
        </member>
    </members>
</doc>
